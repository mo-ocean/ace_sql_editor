<template>
  <div class="ace-container">
    <!-- <div class="ace-editor" ref="ace"></div> -->
 
    <!-- <div class="config-panel" v-show="toggle">
      <div>
        <div class="item">
          <label class="title">语言</label>
          <el-select class="value" v-model="modePath" @change="handleModelPathChange" size="mini" value-key="name">
            <el-option v-for="mode in modeArray"
                       :key="mode.name"
                       :label="mode.name"
                       :value="mode.path">
            </el-option>
          </el-select>
        </div>
 
        <div class="item">
          <label class="title">换行</label>
          <el-select class="value" v-model="wrap" @change="handleWrapChange" size="mini" value-key="name">
            <el-option v-for="wrap in wrapArray"
                       :key="wrap.name"
                       :label="wrap.name"
                       :value="wrap.value">
            </el-option>
          </el-select>
        </div>
      </div>
    </div>
 
    <div class="bookmarklet" @click="toggleConfigPanel">aa</div> -->
  <m-ace-editor
     height="250px" 
     v-model="content" 
     :line-number="true" 
     :highlight-active-line="true"
     ref="ace" 
     mode="sql" 
     theme="monokai"
     @init
     >
  </m-ace-editor>
  </div>
</template>
 
<script>
// import ace from "ace-builds";
// import "ace-builds/src-noconflict/snippets/javascript";
// import "ace-builds/src-noconflict/snippets/html";
// import "ace-builds/src-noconflict/snippets/css";
// import "ace-builds/src-noconflict/snippets/scss";
// import "ace-builds/src-noconflict/snippets/json";
// import "ace-builds/src-noconflict/snippets/java";
// import "ace-builds/src-noconflict/snippets/text";
// import "ace-builds/src-noconflict/snippets/sql";
// import "ace-builds/src-noconflict/snippets/sqlserver";
// import  "ace-builds/webpack-resolver";
// import   "ace-builds/src-noconflict/ace";


// import langTools from "ace-builds/src-noconflict/ext-language_tools";
// import "ace-builds/src-noconflict/theme-monokai";
// import "ace-builds/src-noconflict/mode-javascript";
// import "ace-builds/src-noconflict/mode-sql";
// import "ace-builds/src-noconflict/mode-sqlserver";
import ace from 'brace'
import 'brace/mode/javascript'
import 'brace/mode/sql'
import 'brace/theme/monokai'





export default {
  props: {
    value: String
  },
  data() {
    return {
      content:'code'
    };
  },
  mounted() {
   
  //   this.aceEditor = ace.edit(this.$refs.ace, {
  //     maxLines: 20,
  //     minLines: 10,
  //     fontSize: 14,
  //     value: this.value ? this.value : "",
  //     theme: this.themePath,
  //     mode: this.modePath,
  //     wrap: this.wrap,
  //     tabSize: 4
  //   });
  //   this.aceEditor.setHighlightActiveLine(false);
  //   // 激活自动提示
  //   this.aceEditor.setOptions({
  //     enableSnippets: true,
  //     enableLiveAutocompletion: true,
  //     enableBasicAutocompletion: true
  //   });
  //   this.aceEditor.getSession().on("change", this.change);
  //   // this.aceEditor.getSession().selection.on('changeSelection', this.changeSelection);

  //   this.aceEditor.getSession().setUseWrapMode(true);//设置代码折叠
  //  this.aceEditor.getSession().setUseSoftTabs(true);
  //   //将自定义提示弄到方法里面，然后传自定义字段调用
  //   this.zidingyi(this.data)
  },
  methods: {
    init (editor) {
       editor.setOptions({
        enableSnippets: true,
        enableLiveAutocompletion: true,
        enableBasicAutocompletion: true
    });
    }
  }
  
  
};
</script>
 
<style lang='css' scoped>
/* .ace-container {
  position: relative;
}
.ace-containe .config-panel {
  position: absolute;
  right: 0;
  bottom: 0;
  width: 50%;
  height: 100%;
  overflow: scroll;
  box-shadow: grey -5px 2px 3px;
  background-color: rgba(255, 255, 255, 0.5);
  z-index: 1;
}
.ace-containe .config-panel .item {
  margin: 10px auto;
  text-align: center;
}
.ace-containe .config-panel .item .title {
  color: white;
  margin: 0 10px;
  font-size: 14px;
}
.ace-containe .bookmarklet {
  position: absolute;
  right: 0;
  bottom: 0;
  width: 20px;
  height: 20px;
  z-index: 2;
  cursor: pointer;
  border-width: 9px;
  border-style: solid;
  border-color: lightblue gray gray rgb(206, 173, 230);
  border-image: initial;
} */
</style>
